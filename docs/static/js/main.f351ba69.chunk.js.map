{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifts","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAKaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAgBhD,OACI,sBAAOC,SATU,SAACC,GAClBA,EAAEC,iBACGJ,IACDF,GAAc,SAACO,GAAD,OAAiBL,GAAjB,mBAAgCK,OAC9CJ,EAAc,MAKlB,SACI,uBACIK,KAAK,OACLC,MAAUP,EACVQ,SAjBM,SAACL,GACfF,EAAcE,EAAEM,OAAOF,a,+BCRlBG,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIR,IACRU,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,UAAUZ,QAVf,kBAebM,GAfa,4CAAH,sDCSNO,EATM,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,uDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCsCDO,EApCE,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHN,SAACA,GAAc,IAAD,EAEbZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA6BvC,OArBAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAhB,GACFiB,YAAW,WACPH,EAAS,CACLf,KAAMC,EACNY,SAAS,MAEd,WAEZ,CAACpB,IAWGqB,EDhBwBK,CAAc1B,GAAjCa,EAVmB,EAUxBN,KAAaa,EAVW,EAUXA,QAIpB,OACI,qCACI,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,aE5BxBgB,EAAgB,WAAM,MAGGvC,mBAAS,CAAC,cAHb,mBAG1BM,EAH0B,KAGdP,EAHc,KAgBjC,OACA,qCACC,+CACA,uBAIA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACEO,EAAWe,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,Y,MCzBpB4B,IAASC,OAAO,cAAC,EAAD,IACfC,SAASC,eAAe,W","file":"static/js/main.f351ba69.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleAdd = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if ( inputValue ) {\r\n            setCategories((categories) => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form  onSubmit = { handleSubmit}>\r\n            <input\r\n                type=\"text\"                \r\n                value = { inputValue }\r\n                onChange= { handleAdd }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","\r\n\r\nexport const getGifts = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=mVoXB1blzvkSPWjlBWAo4K30rAAF1QNg`;\r\n\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifts = data.map(img => {\r\n        return {\r\n            id: img.url,\r\n            title: img.title,\r\n            url: img.images?.downsized.url\r\n        }\r\n\r\n    });\r\n\r\n    return gifts;\r\n}","import React from 'react'\r\n\r\nconst GiftGridItem = ( {id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">   \r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GiftGridItem;","// import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\n// import { getGifts } from '../helpers/getGifts';\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport GiftGridItem from './GiftGridItem';\r\n\r\n\r\n\r\nconst GiftGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     getGifts( category ).then(setImages);\r\n    // }, [category]);\r\n\r\n\r\n    const {data:images, loading} = useFetchGifts(category);\r\n\r\n    //getGifts();\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => (\r\n                        <GiftGridItem\r\n                            key={img.id}\r\n                            {...img} />\r\n                    ))\r\n\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default GiftGrid;","import { useState, useEffect } from 'react';\r\nimport { getGifts } from '../helpers/getGifts';\r\n\r\n\r\n\r\nexport const useFetchGifts = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        getGifts(category)\r\n            .then(gifts => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: gifts,\r\n                        loading: false\r\n                    });\r\n                }, 1500);\r\n            });\r\n    }, [category])\r\n\r\n   \r\n\r\n    // setTimeout(() => {\r\n    //     setState({\r\n    //         data: [1, 2, 3],\r\n    //         loading: false\r\n    //     });\r\n    // }, 3000);\r\n\r\n    return state;\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport GiftGrid from \"./components/GifGrid\";\r\n\r\nexport const GiftExpertApp = () => {\r\n  //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n  const [categories, setCategories] = useState([\"Samurai X\"]);\r\n\r\n  // const handleAdd = () => {\r\n  //     // setCategories((categories) => {\r\n  //     //     // const clone = Array.from(categories);\r\n  //     //     // clone.push('HunterXHunter');\r\n  //     //     // const clonedArray = categories.slice();\r\n  //     //     // clonedArray.push('HunterXHunter');\r\n  //     //     return clonedArray;\r\n  //     // });\r\n  //     setCategories([...categories, 'HunterXHunter']);\r\n  // };\r\n\r\n  return (\r\n\t\t<>\r\n\t\t\t<h2>GiftExpertApp</h2>\r\n\t\t\t<hr />\r\n\r\n\t\t\t{/* <button onClick={ handleAdd } >Agregar</button> */}\r\n\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t<GiftGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GiftExpertApp } from \"./GiftExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GiftExpertApp />,\n\tdocument.getElementById(\"root\"));\n"],"sourceRoot":""}